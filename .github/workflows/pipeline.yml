name: 'CI - Build & Release'
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Test Job
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: 'Checkout Code'
        uses: actions/checkout@v4

      - name: 'Install Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: 'Install Dependencies'
        run: npm ci

      - name: 'Npm Run: test'
        run: xvfb-run -a npm run test


  # Build Job
  build:
    needs: [test]
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Use private GitHub App to generate token for semantic-release
      - name: 'Generate semantic-release Token'
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.SR_APP_ID }}
          private-key: ${{ secrets.SR_APP_PK }}

      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          persist-credentials: false

      - name: 'Install Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: 'Install Dependencies'
        run: npm ci

      - name: 'Npm Run: lint'
        run: npm run lint

      - name: 'Npm Run: compile (build)'
        run: npm run compile

      - name: 'Build Package via semantic-release'
        run: npx semantic-release --extends ./package.release.config.js
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
          VSCE_TARGET: "universal"

      - name: 'Upload Package Artifact'
        uses: actions/upload-artifact@v4
        with:
          path: "*.vsix"


  # Release Job
  release:
    needs: [test, build]
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # Use private GitHub App to generate token for semantic-release
      - name: 'Generate semantic-release Token'
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.SR_APP_ID }}
          private-key: ${{ secrets.SR_APP_PK }}

      - name: 'Checkout Code'
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate_token.outputs.token }}
          persist-credentials: false

      - name: 'Install Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: 'Install Dependencies'
        run: npm ci

      - name: 'Download Package Artifact'
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: 'Publish Release via semantic-release'
        if: github.event_name == 'push' || github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
        run: npx semantic-release --extends ./publish.release.config.js
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
